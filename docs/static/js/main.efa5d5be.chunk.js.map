{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertApp.js","reportWebVitals.js","index.js"],"names":["AddCategory","setCategories","useState","inputvalue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","console","log","className","alt","src","getGifs","category","a","fetch","respuesta","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","categorie","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2MAyBeA,EAvBK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACpB,EAAoCC,mBAAS,cAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OACrBR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,KAId,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAZhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,QCOZG,EAVK,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAE7B,OADEC,QAAQC,IAAI,CAACJ,KAAGC,QAAMC,QAEtB,sBAAcG,UAAU,2CAAxB,UACE,qBAAKC,IAAI,QAAQC,IAAKL,IACtB,4BAAID,MAFID,I,uBCLAQ,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBR,EADgB,iDAEoBO,EAFpB,8DAIIE,MAAMT,GAJV,cAIdU,EAJc,gBAKGA,EAAUC,OALb,uBAKZC,EALY,EAKZA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLjB,GAAIiB,EAAIjB,GACRC,MAAOgB,EAAIhB,MACXC,IAAKe,EAAIC,OAAOC,iBAAiBjB,QAVjB,kBAaba,GAba,4CAAH,sDCwBNK,EApBC,SAAC,GAAiB,IAAfX,EAAc,EAAdA,SAEjB,ECH0B,SAACA,GAC3B,MAA0BvB,mBAAS,CACjC4B,KAAM,GACNO,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OARAC,qBAAU,WACRhB,EAAQC,GAAUgB,MAAK,SAACR,GACtBM,EAAS,CACPT,KAAMG,EACNI,SAAS,SAGZ,CAACZ,IACGa,EDVqBI,CAAajB,GAA7BS,EAAZ,EAAOJ,KAAYO,EAAnB,EAAmBA,QAGnB,OACI,mCACF,sBAAKhB,UAAU,YAAf,UACE,6BAAKI,IACJY,GAAW,mBAAGhB,UAAU,iDAAb,wBAETa,EAAOF,KAAI,SAAAC,GAAG,OACb,cAAC,EAAD,eAAkCA,GAAbA,EAAIjB,aEOpB2B,EApBM,WAEnB,MAAoCzC,mBAAS,CAC3C,eADF,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAIA,OACE,qCACA,8CACE,cAAC,EAAD,CAAaA,cAAeA,IAG5B,uBACC2C,EAAWZ,KAAI,SAAAa,GAAS,OACtB,cAAC,EAAD,CAAyBpB,SAAUoB,GAArBA,UCLRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.efa5d5be.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\"\nconst AddCategory = ({setCategories}) => {\n  const [inputvalue, setinputValue] = useState(\"Hola mundo\");\n  const handleInputChange = (e) => {\n    setinputValue(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(inputvalue.trim().length>2);\n    setCategories(cats =>[inputvalue,...cats]);\n    setinputValue('');\n\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputvalue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes ={\n    setCategories:PropTypes.func.isRequired,\n}\n\nexport default AddCategory;\n","import React from \"react\";\n\nconst GifGridItem = ({id,title,url}) => {\n    console.log({id,title,url})\n  return (\n    <div key={id} className=\"card animate__animated  animate__flipInX\">\n      <img alt='title' src={url} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n"," export const getGifs = async (category) => {\n  const url =\n  `https://api.giphy.com/v1/gifs/search?q=${category}&limit=5&api_key=hdC0uwYn3YKEf7ZHUxwbsWvJqmwEXiis`;\n\n    const respuesta = await fetch(url);\n    const { data } = await respuesta.json();\n    const gifs = data.map((img) => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images.downsized_medium.url,\n      };\n    });\n    return gifs;\n  };","// import React, { useState, useEffect } from \"react\";\nimport GifGridItem from \"./GifGridItem\";\n\nimport { useFetchGifs } from \"./hooks/useFetchGifs\";\nconst GifGrid = ({ category}) => {\n  \n  const {data:images,loading}=useFetchGifs(category);\n \n\n  return (\n      <>\n    <div className=\"card-grid\">\n      <h2>{category}</h2>\n      {loading && <p className=\" animate__animated  animate__lightSpeedInRight\">Loading...</p>}\n   \n        {images.map(img=> (\n          <GifGridItem  key = {img.id} {... img}/>\n        ))}\n        \n    </div>\n    </>\n  );\n};\n\nexport default GifGrid;\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n  useEffect(() => {\n    getGifs(category).then((img) => {\n      setState({\n        data: img,\n        loading: false,\n      });\n    });\n  }, [category]);\n  return state;\n};\n","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\nconst GifExpertApp = () => {\n  //   const categories = [\"categoria1\", \"categoria2\", \"categoria3\"];\n  const [categories, setCategories] = useState([\n    \"categoria1\",\n  ]);\n  \n  return (\n    <>\n    <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n\n     \n      <hr />\n      {categories.map(categorie => (\n         <GifGrid key={categorie} category={categorie}/ > \n      ))}\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <GifExpertApp/ >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}